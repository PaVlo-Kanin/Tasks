   
    
 
   Процедура ПервыйБлок ()

//Сообщить( " То заплачет, как дитя.");    Сообщить (" То, как зверь она завоет,") ;  Сообщить  ("Вихри снежные крутя.") ;  Сообщить ("Буря мглою небо кроет,"); 

//Сообщить('19571004');  Сообщить(8);  Сообщить ("Юрий");Сообщить ("Гагарин"); Сообщить ("Юрий" + "" +" Гагарин");  Сообщить (((154*2)+(246/3))/2)  ;  

////                     Задание №10 Вывод таблицы умножения на 7

//Сообщить ("Таблица умножения 7");
//Сообщить ("7 х 1 = " + 7*1)  ;
//Сообщить ("7 х 2 = " + 7*2)  ;
//Сообщить ("7 х 3 = " + 7*3)  ;
//Сообщить ("7 х 4 = " + 7*4)  ;
//Сообщить ("7 х 5 = " + 7*5)  ;
//Сообщить ("7 х 6 = " + 7*6)  ;
//Сообщить ("7 х 7 = " + 7*7)  ;
//Сообщить ("7 х 8 = " + 7*8)  ;
//Сообщить ("7 х 9 = " + 7*9)  ;

////                     Задание №11 Правила Составления Имен

//ПервыйКосмонавт = 8 ;
//              7ЦветовРадуги = 8;
//СемьЦветовРадуги= 8 ;
//ЦветовРадуги7 = 8 ;
//               Гора"Эверетс" = 8 ;
//ЦветовРадуги_7= 8 ;
//_НазваниеНашейПланеты= 8 ;
//               Рассвет_в космосе= 8;
//               Северный<Полюс>  = 8 ;

////                     Задание №12 Запрос 2 чисел и вывод их суммы

//ЧислоА = 0;   // объявили первое число и указали, что оно равно 0
//ВвестиЧисло(ЧислоА);  // выводим окно ввода числа для пользователя
//ЧислоБ = 0;
//ВвестиЧисло(ЧислоБ);
//СуммаЧисел = ЧислоА +  ЧислоБ;
//ОткрытьЗначение(СуммаЧисел); 

////                     Задание №13 Запрос радиуса окружности  и вывод длины окружности

//РадиусОкружности = 0;
//ВвестиЧисло(РадиусОкружности);
//ДлинаОкружности = РадиусОкружности*2*3.14;
//ОткрытьЗначение( "Длина Окружности Радиусом " + РадиусОкружности + " Равна " + ДлинаОкружности);

////                     Задание №14 Логические Операции. Результат опреаций Вывод "Да"(Истина) или "Нет"(ложь)

//Сообщить ("Венера" = "Юпитер" );
//Сообщить ("Венера" <> "Юпитер" );
//Сообщить (123 = 321 );
//Сообщить (123 < 321 );
//Сообщить (123 <= 321 );
//Сообщить (123 <= 123 );
//Сообщить ('20010101' <> '20140101' );
//Сообщить ('20010101' = '20010101' );
//Сообщить ('20140101' > '20120101' );
//Сообщить (25 + 25 = 50 );
//Сообщить (2 * (10 + 10) > 50 );
//Сообщить ("Юрий " + " Гагарин" = "Юрий  Гагарин" );

////                     Задание №16 Вычисление результата Логическиъ Операций. 
////                     Результат опреаций Вывод "Да"(Истина) или "Нет"(ложь)

//Сообщить(1 = 1 и 2 = 2);
//Сообщить(Не 10 > 5 );
//Сообщить ("Солнце" = "Луна" Или  "Юпитер" = "Юпитер" );
//Сообщить (Не "Солнце" = "Луна" );
//Сообщить( 10 <> 5 Или 5 = 5 );
//Сообщить( Истина Или Ложь );
//Сообщить(Не Истина  );
//Сообщить( Истина И Ложь );
//Сообщить( Ложь Или Истина )

////                                      УСЛОВНЫЕ КОМАНДЫ. 
////                        Пример №1 Определение знака введенного числа

//ЧислОтПользователя = 0;
//ВвестиЧисло(ЧислОтПользователя);
//Если ЧислОтПользователя < 0 Тогда
//    ОткрытьЗначение("Вы ввели Отрицательное число") ;
//Иначе    ОткрытьЗначение("Вы ввели Положительное число") ;

 ////                     Пример №2
 
//ИмяПользователя = "";
//ВвестиСтроку(ИмяПользователя);
//Если     ИмяПользователя = "Александр" Тогда 
//    ОткрытьЗначение("Вас зовут Александр!")
//КонецЕсли;

////                         Пример №3

//ИмяПользователя = "";
//ВвестиСтроку(ИмяПользователя);
//Если     ИмяПользователя <> "Александр" Тогда 
//    ОткрытьЗначение("Вас зовут точно не Александр!");
//    ОткрытьЗначение("Вас зовут " + ИмяПользователя );
//    КонецЕсли;

////                 Задание №18 Сравнение двух введенных чисел и вывод строки результата сравнения 

//ЧислОтПользователя1 = 0;
//ВвестиЧисло(ЧислОтПользователя1);
//ЧислОтПользователя2 = 0;
//ВвестиЧисло(ЧислОтПользователя2);
//Если ЧислОтПользователя1 >=  ЧислОтПользователя2  Тогда
//    ОткрытьЗначение("Первое число больше или равно второму ") ;
//Иначе    
//    ОткрытьЗначение("Второе число больше первого ") ;
//КонецЕсли   ;

////                 Задание №19 Ввод 2-х чисел и опреции над ними в зависимости от знака чисел

//ЧОТ1 = 0;  //ЧислоОтПользователя1
//ВвестиЧисло(ЧОТ1); 
//ЧОТ2 = 0;   // ЧислоОтПользователя2
//ВвестиЧисло(ЧОТ2);
//СуммаЧисел = 0;
//ПроизведениеЧисел = 0;
//Если (ЧОТ1 > 0)  И   (ЧОТ2 > 0)  Тогда
//      СуммаЧисел = ЧОТ1 + ЧОТ2; 
//    ОткрытьЗначение("Сумма положительных Чисел равно "+ СуммаЧисел) ;
//ИначеЕсли   (ЧОТ1 < 0) Или   (ЧОТ2 < 0)  Тогда
//    
//    ПроизведениеЧисел = ЧОТ1 * ЧОТ2;
//      ОткрытьЗначение("Произведение не положительных чисел равно " + ПроизведениеЧисел ) ;
//  Иначе
//      ОткрытьЗначение("Недопустимые данные" ) ;
//КонецЕсли   ;

////                                    ЦИКЛЫ. 
////                            Задание №22 Таблица умножения на 7 через цикл

//Для Шаг = 1 по 10 Цикл 
//   Сообщить( Шаг * 7);
//КонецЦикла;

////                            Задание №23 Вывод чисел от 10 до 100 через цикл ПОКА

//Шаг = 10;
//Пока  Шаг <=100 Цикл
//    Сообщить(Шаг);
//Шаг = Шаг+1;
//КонецЦикла; 

//Шаг = 10;
//Пока Шаг >= 1 Цикл
//Сообщить(Шаг*7);
//Шаг = Шаг - 1;	
//КонецЦикла; 

//Для Шаг1 = 1 По 10 Цикл
//    Для Шаг2 = 10 По 20 Цикл
//        Для Шаг3 = 20 По 30 Цикл

//       Сообщить("" + Шаг1 + "  " + Шаг2 + " " + Шаг3);
//       
//    КонецЦикла; 
//    КонецЦикла; 
//КонецЦикла; 

//Для Шаг1 = 1 По 3 Цикл
//    Для Шаг2 = 1 По 9 Цикл
//        Если Шаг1 + Шаг2 = 10 Тогда
//           Сообщить(" " + Шаг1 + " " + Шаг2)    ;
//        КонецЕсли; 
//    КонецЦикла; 
//КонецЦикла; 

//Для Шаг1 = 1 По 30 Цикл
//	Для Шаг2 = 1 По 30 Цикл
//             	Если Шаг1 * Шаг2 = 30 Тогда
//                      	Сообщить("" + Шаг1 + " " + Шаг2 );
//                КонецЕсли; 
//             КонецЦикла; 
//КонецЦикла; 

//СлучайныеЧисла = Новый Массив (4);
//СлучайныеЧисла[0] = 24;
//СлучайныеЧисла[1] = '20010101';
//СлучайныеЧисла[2] = "Привет, Мир!";
//СлучайныеЧисла[3] = 6;
////Для Индекс = 0 По 3 Цикл
////    Сообщить(СлучайныеЧисла[Индекс])
////	    КонецЦикла; 
//Сообщить(СлучайныеЧисла[0]); 
//Сообщить(СлучайныеЧисла[1]); 
//Сообщить(СлучайныеЧисла[2]); 
//Сообщить(СлучайныеЧисла[3]); 

//Число1 = 0;
//Число2 = 0;
//Число3 = 0;
//Число4 = 0;
//Число5 = 0;
//ВвестиЧисло(Число1);
//ВвестиЧисло(Число2);
//ВвестиЧисло(Число3);
//ВвестиЧисло(Число4);
//ВвестиЧисло(Число5);
//СуммаЧисел = Число1 + Число2 + Число3 + Число4 + Число5; 
//ОткрытьЗначение( СуммаЧисел);

//Числа = Новый Массив (10);
//    Для Номер = 0 По 9 Цикл
//ВвестиЧисло(Числа[Номер]);
//КонецЦикла;
//Для Индекс = 0 По 9 Цикл

//	     ОткрытьЗначение(Числа[Индекс]);

//КонецЦикла; 
//ПроизведениеЧисел = 1;
//Для Номер = 0 По 9 Цикл

//	ПроизведениеЧисел = ПроизведениеЧисел * Числа[Номер] ;

//КонецЦикла; 
//ОткрытьЗначение ("Произведение чисел равно = " + ПроизведениеЧисел);


//// Записали в массив числа от пользователя
//Числа = Новый Массив (5);
//    Для Номер = 0 По 4 Цикл
//ВвестиЧисло(Числа[Номер]);
//КонецЦикла;
//// Записали первое число от пользователя  
//МинЧисло = Числа[0] ;
//// Сравниваем первое число от пользователя с другими
//    Для Номер = 1 По 4 Цикл
//        Если МинЧисло >=  Числа[Номер]  Тогда
//             МинЧисло = Числа[Номер];
//        КонецЕсли; 
//    
//    КонецЦикла; 	
// 
//ОткрытьЗначение(МинЧисло);

//ДругойМассив = Новый Массив;

//ДругойМассив.Добавить(125);
//ДругойМассив.Добавить(13);
//ДругойМассив.Добавить(123);
//Для Индекс = 0 По 2 Цикл

//	Сообщить (ДругойМассив[Индекс]) ;

//КонецЦикла; 

//Сообщить (ДругойМассив.Количество()) ;

//ДругойМассив [2] = 5;




// Спрашиваем у пользователя сколько чисел он хочет обработать
//ОткрытьЗначение("Сколько чисел вы хотите ввести?");
//КоличествоЧисел = 0;
//ВвестиЧисло(КоличествоЧисел);

//Числа = Новый Массив(КоличествоЧисел) ;
//    Для Номер = 0 По КоличествоЧисел - 1 Цикл
//ВвестиЧисло(Числа[Номер]);
//КонецЦикла;
//// Записали первое число от пользователя  
//МаксЧисло = Числа[0] ;
//// Сравниваем первое число от пользователя с другими
//    Для Номер = 1 По КоличествоЧисел - 1 Цикл
//        Если МаксЧисло <=  Числа[Номер]  Тогда
//             МаксЧисло = Числа[Номер];
//        КонецЕсли; 
//    
//    КонецЦикла; 	
// 
//ОткрытьЗначение(МаксЧисло);


//// ввод чисел от пользователя и нахождение наибольшего из них
//ОткрытьЗначение("Сколько чисел вы хотите ввести?");
//КоличествоЧисел = 0;
//ВвестиЧисло(КоличествоЧисел);
////
//МассивЧисел = Новый Массив (КоличествоЧисел);
//    Для Индекс = 0 По КоличествоЧисел - 1  Цикл
//ВвестиЧисло(МассивЧисел[Индекс]) ;
//КонецЦикла;
//МаксЧисло =МассивЧисел[0]; // записали первое число
////
//Для Индекс = 1 По КоличествоЧисел - 1  Цикл
//    Если МаксЧисло <= МассивЧисел[Индекс]  Тогда
//           МаксЧисло =  МассивЧисел[Индекс];
//    КонецЕсли; 

//КонецЦикла; 

//ОткрытьЗначение(МаксЧисло);

//Человек = Новый Структура("Фамилия,Имя,Отчество");
//Человек.Имя = ("Иван");
//Человек.Фамилия = ("Пупкин");
//Человек.Отчество = ("Васильевич") ;

//Сообщить(Человек.Фамилия);
//Сообщить(Человек.Имя);
//Сообщить(Человек.Отчество);


//Люди = Новый Массив (3);

//Для Шаг = 0 По 2 Цикл
//    Люди[Шаг] = Новый Структура("Имя, Возраст");
//    ВвестиСтроку(Люди[Шаг].Имя);
//    ВвестиЧисло(Люди[Шаг].Возраст);
//КонецЦикла;  
//ИмяСамогоСтрашего = Люди[0].Имя;
//НаибольшийВозраст = Люди[0].Возраст;
//Для Шаг = 1 По 2 Цикл 
//	Если НаибольшийВозраст <= Люди[Шаг].Возраст   Тогда
//                 НаибольшийВозраст = Люди[Шаг].Возраст;
//                   ИмяСамогоСтрашего = Люди[Шаг].Имя;               	    
//    КонецЕсли; 
//КонецЦикла; 

//ОткрытьЗначение ("Самого старшего работника зовут "+ ИмяСамогоСтрашего + " Его возраст " + НаибольшийВозраст );

//// Определение имени человека с наименьшим весом
//Люди = Новый Массив (4);
//Для Шаг = 0 По 3 Цикл

//	 Люди[Шаг] = Новый Структура("Имя, Вес") ;
//ВвестиСтроку(Люди[Шаг].Имя);
//ВвестиЧисло(Люди[Шаг].Вес);

//КонецЦикла; 

//ИмяСамогоЛегкогоЧеловека = Люди[0].Имя;
//ВесСамогоЛегкогоЧеловека = Люди[0].Вес;

//Для Шаг = 1 По 3 Цикл
//    Если ВесСамогоЛегкогоЧеловека >= Люди[Шаг].Вес Тогда
//          ВесСамогоЛегкогоЧеловека = Люди[Шаг].Вес ; 
//    	  ИмяСамогоЛегкогоЧеловека =  Люди[Шаг].Имя;
//               КонецЕсли; 
//             
//КонецЦикла; 
//ОткрытьЗначение ("Самого легкого работника зовут "+ ИмяСамогоЛегкогоЧеловека + " Он весит " + ВесСамогоЛегкогоЧеловека + " кг" );

//ПервоеЧисло = 0;
//ВтороеЧисло = 0;
//ВвестиЧисло(ПервоеЧисло);
//ВвестиЧисло(ВтороеЧисло);
//ОткрытьЗначение(Уроки.ОпределениеМеньшегоЧисла(ПервоеЧисло,ВтороеЧисло)) ;


////            Вычисление Площади Круга
////                  Вызов функции
//Радиус = 0;
//ВвестиЧисло(Радиус);
//Площадь = Уроки.ПлощадьКруга(Радиус);
//ОткрытьЗначение("Площадь круга радиусом " + Радиус  " равна "+ Площадь);

////                Вызов Процедуры 
//Радиус = 0;
//ВвестиЧисло(Радиус);
//Уроки.ПлощадьКруга(Радиус);

//// Задание №38 Сложение Строк
//Строка1 = "";
//Строка2 = "";
//ВвестиСтроку(Строка1, "Введите Ваше Имя");
//ВвестиСтроку(Строка2, "Введите Вашу Фамилию");
//РезультатФункции = Уроки.СложениеСтрок(Строка1, Строка2);
//ОткрытьЗначение(" Вас зовут " + РезультатФункции);


//Число1 = 0;
//Число2 = 0;
//ВвестиЧисло(Число1);
//ВвестиЧисло(Число2);

//Уроки.ВыводЧисел(Число1,Число2 );

////                        ОТЛАДКА.
////                    Пример №1. Устанавливаем точку отладки на 5 строке

//А = 4;
//Б = 7;
//Сумма = А + Б;
//Сообщить (Сумма);
//Сумма = Сумма * 2;
//Сообщить(Сумма);

////                        Пример №2. Изучение отладки

//МассивЧисел= Новый Массив(5);
//МассивЧисел[0]= 10;
//МассивЧисел[1]= 5;
//МассивЧисел[2]= 450;
//МассивЧисел[3]= 654;
//МассивЧисел[4]= 34;

//НаименьшееЧисло = 1000000;
//Для Шаг = 0 По 4 Цикл
//	Если МассивЧисел[Шаг] < НаименьшееЧисло  Тогда
//          НаименьшееЧисло = МассивЧисел[Шаг];       	   
//    КонецЕсли;   
//КонецЦикла; 
//Сообщить(НаименьшееЧисло);

////                          ИСПОЛЬЗОВАНИЕ СИНТАКСИС-ПОМОЩНИКА

//// Для получения информации по интересующему слову, нужно поставить курсор на слово 
//// и нажать ctrl+F1, откроется синтакс-помощник

//// Если нам известно начало команды, но точное ее название не известно
//// Для этого пишем, например, Ввести (Ставим курсор после слова и нажимаем ctrl+пробел)
//// Появляется окно с выбором команд, после выбора необходимой команды
//// Например,ВвестиЗначение( (автоматически открывается скобка и открывается окно ПОДСКАЗКИ параметров вызова) 
//// Если окно подсказки закрылось, то установив курсор после скобки нажимаем ctrl+shift+пробел
//// Окно снова появляется



//ПервыйДеньЛета = '20010601';
//Сообщить(ПервыйДеньЛета);

//ПервыйДеньЛета = Дата (2001, 06, 01);
//Сообщить(ПервыйДеньЛета);


//ДатаОтПользователя = '20210101';
//ВвестиДату(ДатаОтПользователя);
//ОткрытьЗначение(ДатаОтПользователя);

////                  ОПЕРАЦИИ С ДАТАМИ

//Сегодня = ТекущаяДата();    
//Сообщить("Текущая дата " + Сегодня);
//Сообщить("Год " + Год(Сегодня));
//Сообщить("Месяц "+ Месяц(Сегодня));
//Сообщить( "Днень "+ День(Сегодня));

//Завтра = Сегодня + 60*60*24;
//Сообщить(Завтра);
//ЧерезМесяц = ДобавитьМесяц(Сегодня, -3);
//Сообщить(ЧерезМесяц);
//РазностьДат = (Сегодня - ЧерезМесяц)/(60*60*24);
//Сообщить("Дней между двумя датами " + РазностьДат);
//РазностьДат1 = '20140402' - '20010811';
//Сообщить("Разница в секундах " + РазностьДат1);
//НГ = '20011231';
//Сообщить(ДеньНедели(Сегодня));  // порядковый номер от 1 до7
//Сообщить(ДеньГода(Сегодня));  // порядковый номер от 1 до365
//Сообщить(НеделяГода(НГ));  // порядковый номер от 1 до 53



////       Функция принимает дату и выводин названия дня недели

//ДатаОтПользователя = '00000000';
//ВвестиДату(ДатаОтПользователя);
//ОткрытьЗначение( Уроки.ВывестиДеньНедели(ДатаОтПользователя));


//// Функция принимает дату дня рождения и выводит что день рождения уже прошел,
////                    либо кол-во секунд до дня рождения 

//ДатаОтПользователя = '00000000';
//Дата = ТекущаяДата() ;
//ВвестиДату(ДатаОтПользователя);
//ОткрытьЗначение( Уроки.ДеньРождения(ДатаОтПользователя, Дата));

////           Функция принимает дату дня рождения и выводит что день рождения уже прошел,
////                    либо кол-во секунд до дня рождения
////                   ГЛАВНОЕ ОТЛИЧИЕ   в строке 4

//ДатаОтПользователя = '20010101';
//ВвестиДату(ДатаОтПользователя);
//Сегодня = ТекущаяДата();   
//ДеньРождения = Дата(Год(Сегодня), Месяц(ДатаОтПользователя), День(ДатаОтПользователя));// Тут присваивается объекту год от 
//                                                                                       // текущей даты а, день и число от даты,
//                                                                                       // которую вводит пользователь
//Если Сегодня > ДеньРождения  Тогда                                                      
//    ОткрытьЗначение("Ваш день рождения уже прошел!");                                      
//Иначе    
//СекундДоДР = ДеньРождения - Сегодня;
//	 ОткрытьЗначение("Вам до дня рождения осталось " + СекундДоДР + " секунд");
//КонецЕсли; 



////                        МАТЕМАТИЧЕСКИЕ ОПЕРАЦИИ

//Цена = 100.55;
//ОкругленнаяЦенаВБольшуюСтрону = Окр(Цена, 1, РежимОкругления.Окр15как20)  ; //РежимОкругления работает значении 5
//ОкругленнаяЦенаВМеньшуюСторону = Окр(Цена, 1, РежимОкругления.Окр15как10) ; // при других числах округляет согласно правилам
//Сообщить(ОкругленнаяЦенаВБольшуюСтрону);  // Вернет 100.6
//Сообщить(ОкругленнаяЦенаВМеньшуюСторону);  // Вернет 100.5
//Цена1 = 100.384;
//ОкругленнаяЦена = Окр(Цена1, 2  );
//Сообщить(ОкругленнаяЦена); 

//Число = 111.342;
//Целаячасть = Цел(123.22) ;
//Целаячасть1 = Цел(Число) ; 

//Сообщить(Целаячасть1); //111
//Сообщить(Целаячасть); //123

//ДесятьВКубе = Pow(10,3);
//Сообщить(ДесятьВКубе); //1000

//КвадратныйКорень = sqrt(25);
//Сообщить(КвадратныйКорень); //5

//МаксЗначениеИз3Чисел = Макс(4,-5, 7);
//Сообщить(МаксЗначениеИз3Чисел);

//МаксЗначениеИз2Чисел = Макс(-2,-8);
//Сообщить(МаксЗначениеИз2Чисел);

//МинЗначениеИз3Чисел = Мин(4,-5, 7);
//Сообщить(МинЗначениеИз3Чисел); 

//МинЗначениеИз2Чисел = Мин(-2,-8);
//Сообщить(МинЗначениеИз2Чисел);

//ГСЧ = Новый ГенераторСлучайныхЧисел();
//Сообщить(ГСЧ.СлучайноеЧисло(0,8));

//ГСЧ = Новый ГенераторСлучайныхЧисел(2014);
//СуммаЧисел = 0;
//Шаг = 0   ;

//Пока  Шаг <= 2 Цикл

//СлучЧисло = ГСЧ.СлучайноеЧисло(0 , 1000) ; //185, 580, 301
//ВозведениеВСтепень = Pow(СлучЧисло, 5);
//ИзвлечениеКорня = sqrt(ВозведениеВСтепень);
//ДелениеНа3 = ИзвлечениеКорня / 3;
//Окгуление = Окр(ДелениеНа3, 2, РежимОкругления.Окр15как10)  ;
//ДелениеНа4 = Окгуление / 4; 
//ЦелаяЧасть = Цел (ДелениеНа4);
////Операции = Цел((Окр((sqrt(Pow(СлучЧисло, 5)))/3),2,РежимОкругления.Окр15как10))*0.25) ;
//СуммаЧисел = СуммаЧисел + ЦелаяЧасть;
//Шаг = Шаг + 1;

//КонецЦикла; 
//Сообщить (СуммаЧисел);

//185, 580, 301

//ГСЧ = Новый ГенераторСлучайныхЧисел(2014);
//А = ГСЧ.СлучайноеЧисло(1,1000);
//В = ГСЧ.СлучайноеЧисло(1,1000);
//Г = ГСЧ.СлучайноеЧисло(1,1000);
// 
//Сообщить(А) ;  //186
//Сообщить(В);   //581
//Сообщить(Г);   //302

////                 ФОРМАТ

//Сообщить (10000);
//Сообщить (Формат(10000, "ЧГ=0"));   // Отключает группировку по разрядам
//Сообщить (Формат(10000, "ЧГ=4")); 
//Сообщить (Формат(5, "ЧЦ=2; ЧВН="));  
//Сообщить (Формат(23.56, "ЧРД=$"));  
//Сообщить (Формат('20110423', "ДЛФ=Д"));  
//Сообщить (Формат('20110423', "ДЛФ=ДД"));  
//Сообщить (Формат('20110424', "ДФ=дддд")); 

//Сообщить(Формат(123.45, "ЧРД=$")) ;
//Сообщить (Формат(5, "ЧЦ=3; ЧВН="));
//Сообщить (Формат(ТекущаяДата(), "ДФ=дддд")); 
//Сообщить (Формат(ТекущаяДата(), "ДФ=ММММ")); 

////                ДИАЛОГИ

//Предупреждение("Осторожно!");
//Предупреждение("Осторожно.", , "Внимание!");

//Предупреждение(1);
//Предупреждение(2);
//Предупреждение("Окно закроется за 3 секунды,", 3, " Внимание!" );
//Предупреждение("Окно закроется за 3 секунды,", , " Внимание!" ); 
//Предупреждение("Окно закроется за 3 секунды,", 0, " Внимание!" );

//Число = 0;
//Результат = ВвестиЧисло(Число);
//Если Результат = Истина Тогда
//	ОткрытьЗначение("Вы ввели число " +  Строка(Число));
//Иначе 
//     	ОткрытьЗначение("Вы отменили ввод ") ;
//КонецЕсли; 


//Результат = Вопрос("Вы хорошо выспались?", РежимДиалогаВопрос.ДаНет); 
//Если Результат = КодВозвратаДиалога.Да  Тогда
//ОткрытьЗначение("Какой вы молодец!");
//Иначе 
//ОткрытьЗначение("Раньше надо ложиться");
//КонецЕсли; 



//Результат = Вопрос( 
//"Нажмите Да, чтобы вывести числа от 0 до 10, Нет чтобы вывести числа от"
//+ "10 до 100, ни в коем случае не нажимайте кнопку отмена", РежимДиалогаВопрос.ДаНетОтмена) 
//;
//  Строка = ""; 
//Если Результат = КодВозвратаДиалога.Да Тогда
//  
//Для Шаг = 1 По 10 Цикл
//Строка = Строка +  " " + Шаг; 
//КонецЦикла;
//ОткрытьЗначение(Строка);
//ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда  
//Для Шаг = 10 По 100 Цикл
//Строка = Строка +  " " + Шаг;
//КонецЦикла;
//ОткрытьЗначение(Строка) ;
//Иначе 
//Предупреждение("Мы же вас предупреждали, что нельзя нажимать отмену");

//КонецЕсли; 

//Процедура ПриНачалеРаботыСистемы ()

//                    СПИСОК

//Список =  Новый  СписокЗначений;
//Список.Добавить(10);
//Список.Добавить(0);
//Список.Добавить(-5);
//Список.Добавить(3);

   //                            ЗНАЧЕНИЕ И ПРЕДСТАВЛЕНИЕ 
   // Список =  Новый  СписокЗначений;          
   //Список.Добавить(10, "десять");     // Элемент Списка это структура, туда можно записать значение и представление

    //Для каждого Элемент Из Список  Цикл
    //    Сообщить(Строка(Элемент.Значение) + Строка(Элемент.Представление)) ;
    //    Сообщить(Элемент.Представление);
    //   КонецЦикла; 

    //                            ВЫБОР ЭЛЕМЕНТА
    //Список =  Новый  СписокЗначений;            
    //Список.Добавить(1861, "Отмена рабства");   
    //Список.Добавить(988, "Крещение Руси");     
    //ВыбранныйЭлемент = Список.ВыбратьЭлемент("Выберите событие:"); // первый парамет заголок, второй элемент.
                                                                     //Пользователю выводится окно с выбором Представлений элемнтов списка
                                                                     
                                                                     //Если ВыбранныйЭлемент <> Неопределено Тогда
    //    Сообщить ("Это произошло в " + ВыбранныйЭлемент.Значение + " году" );        
    //КонецЕсли; 

    //                      СОРТИРОВКА ЗНАЧЕНИЙ СПИСКА
    //Список.СортироватьПоЗначению(НаправлениеСортировки.Возр);
    
    
   //                   ПОИСК ПО ЗНАЧЕНИЮ 
   //Число = 0;
   //ВвестиЧисло(Число) ;
   //
   //НайденныйЭлемент = Список.НайтиПоЗначению(Число);
   //
   //Если   НайденныйЭлемент <> Неопределено Тогда
   //    ОткрытьЗначение("Введенное вам число " +  Число + " найдено в списке");
   //Иначе 
   //    ОткрытьЗначение("Введенное вам число " +  Число + " НЕ найдено в списке");
   //    
   //КонецЕсли;
   
   //                  ОПЕРАЦИИ НАД СПИСКОМ
   
   //Список.Вставить(0, 1000); // 1-ый парметр индекс, второй само значение
   //Список.Удалить(0);   // удаляем первый элемент, то есть элемент с идексом 0
   
   
    

   //ЭлементовВСписке =  Список.Количество() ;    // 4 по количесву, по индексу: (количество - 1)
   //Список.Вставить(Список.Количество(), 13);    // Здесь количество элементов 4, а индекс последненго элемента 3.
   //                                             // Чтобы добавить элемент используется команда Список.Вставить
   //                                             // 1-ый парамет команды это индекс, 2-ой само значение
   //                                             // Поскольку мы хотим ДОБАВИТЬ значение в КОНЕЦ СПИСКА индекс, который нужно указать
   //                                             // равен количеству элементов
   //                                             
   //ЭлементовВСписке1 = Список.Количество();     // Тут уже количество 5, а индекс 4                                                
   //Сообщить(Список[Список.Количество()- 1]);    // Чтобы вывести последний элемент списка нужно указать последний индекс = Количество - 1
   //Сообщить(Список[1].Значение);                // Выводит 2 элемент списка
   // 

   //Для Шаг = 0 По Список.Количество()- 1 Цикл   // Пробегаемся по списку с помощью цикла ДЛЯ
   //    Сообщить(Список[Шаг].Значение)   ;   	
   //    
   //КонецЦикла;
   
   //              КОПИРОВАНИЕ
   
   //КопияСписка = Список.Скопировать();
   //КопияСписка.Вставить(0, 12) ;
   //Сообщить(Список[0].Значение); // Выдаст 10
   //Сообщить(КопияСписка[0].Значение); // Выдаст 12, хотя индекс одиннаковые
   
   //            СПОСОБЫ ДОБАВЛЕНИЯ
   
   // Элемент Списка можно добавить 3 способами:
   // Список.Добавить(10); добавляет значение в конец списка
   // Список.Вставить(0, 10); 1- ый параметр указывает индекс, второй значение которыое нужно вставить
   // Список[0].Значение = 10; Присвоить первому элементу списка указанное значение 
   
   
   //             ПРЕВРАЩЕНИЕ В МАССИВ
   
   //МассивЧисел = Список.ВыгрузитьЗначения();  // выгрузили в массив
   //
   //Для Шаг = 0 По МассивЧисел.Количество() - 1  Цикл
   //    Сообщить(МассивЧисел[Шаг]);           // Не нужно указывать поле значение 
   //    
   //    
   //КонецЦикла; 
   
   // ВВОД ОТ ПОЛЬЗОВАТЕЛЯ ЧИСЕЛ, ДОБАВЛЕНИЕ В СПИСОК И ВЫВОД МАКС И МИН ЧИСЕЛ
   
   //ЧислоОтПользователя = 0;
   //ВвестиЧисло(ЧислоОтПользователя, "Сколько чисел");
   //Список = Новый СписокЗначений;
   //
   //Для Шаг = 1 По ЧислоОтПользователя  Цикл
   //    ВвестиЧисло(ЧислоОтПользователя);
   //    Список.Добавить(ЧислоОтПользователя);
   //         
   //КонецЦикла; 
   //
   //Список.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
   //ОткрытьЗначение("Наибольше введенное число " + Список[0].Значение + 
   //" Наименьшее введенное число " + Список[Список.Количество() - 1].Значение) ;
      
//КонецПроцедуры

//                  СТРОКИ



//    
//    ИмяПеременной = "Привет, Мир!";
//    ОткрытьЗначение(ИмяПеременной);
//    
//    ИмяПеременной = "";
//    ВвестиСтроку(ИмяПеременной);
//    ОткрытьЗначение(ИмяПеременной);

//               ПЕРЕНОС СТРОКИ
//Строка1 = "Строка 1
//|Строка 2";
//Сообщить(Строка1);
//Строка2 = "Строка2131221" " фывфывФцв"; // Альтернативный способ вывода строк с переносом строки
//Сообщить(Строка2);
//Дата = '2021-10-14 12:33:20';
//Сообщить (Дата);       

//ИмяПеременной = "Привет";

//Для НомерСимвола = 1 По СтрДлина(ИмяПеременной) Цикл
//    Сообщить(КодСимвола (ИмяПеременной, НомерСимвола));
//    Сообщить(Символ(КодСимвола (ИмяПеременной, НомерСимвола)));
//    
//КонецЦикла

//Текст = "";
//ВвестиСтроку(Текст);  

//   
//   НомерСимвола = СтрНайти(Текст, "счастье");
//   Если НомерСимвола = 0 Тогда 
//       ОткрытьЗначение("Слово счастье в строке не найдено");
//   Иначе
//              ОткрытьЗначение("Слово счастье находится в " +НомерСимвола + " позиции" );
//        КонецЕсли

//Текст = "";
//ВвестиСтроку(Текст);

//НачальнаяПозиция = СтрНайти(Текст, " ", ,1); 
//КоличествоПробелов = 0;
//Пока  НачальнаяПозиция > 0 Цикл   
//    // каждый охотник желает знать где сидит фазан
//    НомерПоиска = НачальнаяПозиция +1;
//    Если НомерПоиска <> 0 Тогда  
//                                  
//        НП = СтрНайти(Текст, " ", ,НомерПоиска); 	
//        НачальнаяПозиция = НП; 
//        КоличествоПробелов = КоличествоПробелов + 1; 
//        
//    КонецЕсли;
//    
//КонецЦикла;

//Сообщить (КоличествоПробелов);

//Текст = "";
//ВвестиСтроку(Текст);   
//                      // каждый охотник желает знать где сидит фазан
//КоличествоПробелом = 0;

//Для НомерСимвола = 1  По СтрДлина(Текст)  Цикл
//    Символ = Сред(Текст,НомерСимвола,1) ;
//      Если Символ = " "  Тогда
//          КоличествоПробелом = КоличествоПробелом + 1;
//      	        КонецЕсли;
//	

//КонецЦикла;
//     ОткрытьЗначение(КоличествоПробелом);    


//Процедура Произведение (ПервоеЧисло, ВтороеЧисло)  Экспорт
//    Результат = ПервоеЧисло * ВтороеЧисло;
//    Сообщить(Результат);
//   
//	             
//КонецПроцедуры
 
//Функция ОписанияЗнакаЧисла (ЛюбоеЧисло) Экспорт 
//    Если ЛюбоеЧисло <= 0  Тогда
//        Возврат "Отрицательное число"
//    Иначе 
//        Возврат "Положительное число"
//КонецЕсли;       
// КонецФункции 
// 
// Функция ДлинаОкружности(Радиус)Экспорт;
//     Результат = 2 * 3.14 *Радиус;
//      Возврат 2 * 3.14 * Радиус;
// 	
// 
// КонецФункции // ДлинаОкружности()
// 
// Функция  ОпределениеМеньшегоЧисла(Число1, Число2) Экспорт
//    Если Число1 < Число2 Тогда
//         Возврат  Число1       
//    Иначе    
// Возврат Число2
//    КонецЕсли; 
// 	    КонецФункции // ОпределениеМеньшегоЧисла()



         ////            Рассчет площади окружности через функцию (Описание)
         
         
        //Функция ПлощадьКруга(Радиус) Экспорт
        //  Пи = 3.14;
        //  Результат = Пи * (Радиус *Радиус); 
        //	     Возврат Результат
        //
        //КонецФункции // ПлощадьКруга()
        
        
        
        ////             Рассчет площади окружности через процедуру (Описание)
        //
        //Процедура ПлощадьКруга(Радиус) Экспорт
        //           Пи = 3.14;
        //           Результат = Пи * (Радиус * Радиус);
        //	       ОткрытьЗначение(Результат);
        //
        //КонецПроцедуры
        
        //      //Сложение Строк (Описание)
        //Функция СложениеСтрок (Строка1, Строка2) Экспорт
        //    Возврат Строка1 + " " + Строка2;
        //           КонецФункции // ()
          
        
        
//        Процедура ВыводЧисел(Число1, Число2) Экспорт
//            Если Число1 >= Число2 Тогда
//                 БольшееЧисло = Число1;
//                 МеньшееЧисло = Число2
//             Иначе  
//                 БольшееЧисло = Число2;
//                 МеньшееЧисло = Число1 ;
//             КонецЕсли; 
//             
//             Строка = "";

//             Пока МеньшееЧисло <= БольшееЧисло Цикл
//                Строка = Строка +  МеньшееЧисло + " ";
//                МеньшееЧисло = МеньшееЧисло + 1;  
//            КонецЦикла; 
//            ОткрытьЗначение(Строка) ;

//КонецПроцедуры // ()
         
     
//Процедура ВыводЧисел(Число1, Число2) Экспорт
//    Строка = "";
//      Если  Число1 >= Число2 Тогда
//                 БольшееЧисло = Число1;
//                 МеньшееЧисло = Число2;
//                 Пока МеньшееЧисло <= БольшееЧисло Цикл
//                Строка = Строка +  БольшееЧисло + " ";
//                БольшееЧисло = БольшееЧисло - 1;  
//                КонецЦикла; 

//     Иначе  
//                 БольшееЧисло = Число2;
//                 МеньшееЧисло = Число1 ;
//                 Пока МеньшееЧисло <= БольшееЧисло Цикл
//                Строка = Строка +  МеньшееЧисло + " ";
//                МеньшееЧисло = МеньшееЧисло + 1;  
//                  КонецЦикла; 

//    КонецЕсли;                   
//                        ОткрытьЗначение(Строка) ;
//КонецПроцедуры // ()

   ////               Функция принимает дату и выводит день недели  
   
//Функция ВывестиДеньНедели(ДатаОтПользователя) Экспорт  
//    НомерДня = ДеньНедели(ДатаОтПользователя);
//    Если НомерДня = 1  Тогда
//        Строка = "Понедельник";
//                  ИначеЕсли НомерДня = 2  Тогда
//        Строка = "Вторник";
//                    ИначеЕсли НомерДня = 3  Тогда
//        Строка = "Среда";
//                    ИначеЕсли НомерДня = 4  Тогда
//        Строка = "Четверг";
//                         ИначеЕсли НомерДня = 5  Тогда
//        Строка = "Пятница";
//                     ИначеЕсли НомерДня = 6  Тогда
//        Строка = "Суббота";
//                     ИначеЕсли НомерДня = 7  Тогда
//        Строка = "Воскресенье";
//    Иначе     
//        Строка = "Невозможное возможно";

//       КонецЕсли; 
//       Возврат Строка
//         КонецФункции



////      Функция принимает День рождения и выводит либо что день рождения уже прошел,
////                    либо кол-во секунд до дня рождения    

//Функция ДеньРождения(ДатаОтПользователя, Дата) Экспорт
//       ДР = ДеньГода(ДатаОтПользователя);
//       ДеньТекущий = ДеньГода(Дата);
//       
//       Если  ДР < ДеньТекущий  Тогда
//           Возврат "Ваш день рождения уже прошел!"
//           
//       ИначеЕсли ДР = ДеньТекущий Тогда 
//              Возврат "С днем рождения!"
//              
//          Иначе 
//          СекундДоДР = (ДР - ДеньТекущий)*60*60*24;   
//          
//             Возврат "Вам до дня рождения осталось " + СекундДоДР + " секунд" 

//      КонецЕсли; 
//КонецФункции // ДеньРождения()

КонецПроцедуры


    Процедура ВторойБлок()
    
    
    


////                        Задача №3 создание массива и вывод наибольшего, наименьшего, среднего значений


//Массив = Новый Массив();
//ГСЧ = Новый ГенераторСлучайныхЧисел();  
//СуммаМассива = 0;

//Для Шаг = 0 По 99   Цикл
//    СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0,1000);
//    Массив.Добавить(СлучайноеЧисло);
//    СуммаМассива = СуммаМассива + Массив[Шаг];  
//КонецЦикла;

//СредняяСумма = СуммаМассива / 100; 
//НаименьшееЧисло = Массив[0];
//НаибольшееЧисло = Массив[0]; 

//Для Шаг = 0  По Массив.ВГраница()  Цикл
//    Если НаименьшееЧисло >= Массив[Шаг] Тогда
//        НаименьшееЧисло = Массив[Шаг];
//    ИначеЕсли  НаибольшееЧисло <= Массив[Шаг] Тогда
//        НаибольшееЧисло = Массив[Шаг];
//    КонецЕсли    
//    
//КонецЦикла; 
//Сообщить(НаименьшееЧисло); 
//Сообщить(НаибольшееЧисло);
//Сообщить(СредняяСумма);   




//Массив = Новый Массив();
//ГСЧ = Новый ГенераторСлучайныхЧисел();  
//СуммаМассива = 0;                    


////                            ЗАДАЧА №4 СОРТИРОВКА ЗНАЧЕНИЙ В МАССИВЕ МЕТОДОМ ПУЗЫРЬКА 


//Массив = Новый Массив();
//ГСЧ = Новый ГенераторСлучайныхЧисел(); 
//Для Шаг = 0 По 99   Цикл
//    СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0,1000);
//    Массив.Добавить(СлучайноеЧисло); 
//КонецЦикла; 


//А = Истина;
//Пока А  = Истина Цикл
//    А = Ложь;                     // обнуляем А до начала внутреннего цикла, чтобы результат прошлого цикла не влиял на следующий
//    Для Шаг = 0 По Массив.ВГраница() - 1  Цикл 
//        
//        Буфер = 0 ;
//        Если Массив[Шаг] > Массив[Шаг + 1]  Тогда 
//            Буфер = Массив[Шаг + 1];
//            Массив[Шаг + 1] = Массив[Шаг]; 
//            Массив[Шаг] = Буфер;
//            А = Истина;              // Если была хотя бы одна перестановка, то А истина Следовательно перезапускаем цикл      
//        КонецЕсли;      
//    КонецЦикла;                  
//КонецЦикла; 

//Для каждого Элемент Из Массив Цикл
//    Сообщить(Элемент) ;     
//КонецЦикла; 

////                   ЗАДАЧА №5 фАКТОРИАЛ 

 
//ГСЧ = Новый ГенераторСлучайныхЧисел();
//СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1,15);
//Сообщить(СлучайноеЧисло);
//Факториал = 1;
//Для Шаг = 1  По СлучайноеЧисло  Цикл
//    
//    Факториал = Факториал * Шаг;
//    
//    
//КонецЦикла; 

//Сообщить(Факториал); 


                 //// ЗАДАЧА №6 И №7 ОПРЕДЕЛЕНИЕ ПРОСТОГО И ПРОСТЫХ ЧИСЕЛ

////    Начало Блока записи простых чисел в массив    
//НатуральноеЧисло = 0;
//ПростыеЧисла = Новый Массив();
//ПростыеЧисла.Добавить(2);
////ВвестиЧисло(НатуральноеЧисло,"Введите натуральное число");
////ГраницаЗначений = Цел(sqrt(НатуральноеЧисло));  // Оптимизация решения, для определения является ли число n простым, достаточно
//     ГраницаЗначений = 1000;                  // проверить делится ли она на все простые числа от 2 до sqrt(n)
//Для Шаг = 3  По ГраницаЗначений  Цикл
//    А = Истина;
//    Для каждого Элемент  Из ПростыеЧисла  Цикл
//        
//        РезультатДеления = Шаг % Элемент;  
//        Если РезультатДеления = 0 Тогда
//            А = Ложь;             
//        КонецЕсли;         
//    КонецЦикла;
//    
//    Если А = Истина Тогда
//        ПростыеЧисла.Добавить(Шаг); 
//        Сообщить(Шаг);
//    КонецЕсли;  
//    
//КонецЦикла; 
//    Конец Блока записи простых чисел в массив

//Для каждого Элемент Из ПростыеЧисла  Цикл 
//    Сообщить(Элемент);
//    //РезультатДеления = НатуральноеЧисло % Элемент; 
//    //Если РезультатДеления = 0 Тогда
//    //    B = Ложь;
//    //КонецЕсли; 
//КонецЦикла;

//Если B = Ложь  Тогда
//    Сообщить("Введенное Вами Число " + НатуральноеЧисло + " не является простым числом" );
//Иначе 
//    Сообщить("Введенное Вами Число " + НатуральноеЧисло + " простое" );
//    КонецЕсли;     


////                           РЕШЕНИЕ ЗАДАЧИ №6 и №7 БЕЗ ОПТИМИЗАЦИИ    


////НатуральноеЧисло = 0;
////ПростыеЧисла = Новый Массив();
////ВвестиЧисло(НатуральноеЧисло,"Введите натуральное число"); 


//Для Числа = 3 по 1000 Цикл
//    ЧислоПростое = Истина;
//    Для Шаг = 2 По Числа - 1  Цикл
//        ОстатокДеления = Числа %  Шаг;     // делим все числа от n до 1000 
//        Если ОстатокДеления = 0 Тогда      // на все числа в диапазоне от n - 1 до 1000 - 1
//            ЧислоПростое = Ложь;
//            Прервать ;
//        КонецЕсли;
//    КонецЦикла; 
//    
//    Если Числа = 3 Тогда
//        Сообщить(2);
//    КонецЕсли;
//    
//    Если ЧислоПростое = Истина Тогда
//        Сообщить(Числа);
//        //ИначеЕсли А = Ложь Тогда
//        //    Сообщить("Данное число " + НатуральноеЧисло +   " не является простым ");  
//    КонецЕсли;
//    
//КонецЦикла; 


// ЗАДАЧА № 7Б ПРОВЕРЯЕТ СТРОКУ НА ПАЛИНДРОМ, С УЧЕТОМ ЗНАКОВ ПРЕПИНАНИЯ И НЕЗНАЧАЩИХ СИМВОЛОВ 
// ТО ЕСТЬ ЕСЛИ БУДЕТ ЛИШНИЙ ПРОБЕЛ ИЛИ ЗАПЯТАЯ, ВЫДАСТ НЕ ПАЛИНДРОМ,

// ПРИНЦИП РАБОТЫ -  ЗАПИСЫВАЕТ ВСЕ СИМВОЛЫ С КОНЦА И ЗАТЕМ СРАВНИВАЕТ ИСХОДНУЮ И ПОЛУЧИВЩУЮСЯ СТРОКУ

////Строка = "кобан упал - и лапу набок";     шалаш
//Строка = "";
//ВвестиСтроку(Строка);   
////Массив =  СтрРазделить(Строка," ", Ложь); 
////Граница = Массив.ВГраница() ; 
//СложениеСимволов = "";
//Длина = СтрДлина(Строка); 
//Для Шаг = 0  По СтрДлина(Строка) - 1 Цикл
//    Символ = Сред(Строка, Длина - Шаг,1);
//    СложениеСимволов = СложениеСимволов + Символ;  
//    
//КонецЦикла; 
//   Сообщить(Строка);

//Сообщить(СложениеСимволов);
//Если Строка = СложениеСимволов  Тогда
//    Сообщить("Вы ввели палиндром! ");
//Иначе 
//    Сообщить("Введенная Вами строка не является палиндромом ");
//КонецЕсли;    


// ЗАДАЧА № 7Б ПРОВЕРЯЕТ СТРОКУ НА ПАЛИНДРОМ, БЕЗ УЧЕТОМ 
// ЗНАКОВ ПРЕПИНАНИЯ И НЕЗНАЧАЩИХ СИМВОЛОВ    

// ПРИНЦИП РАБОТЫ - УБИРАЕТ ИЗ СТРОКИ ЗНАКИ ПРЕПИНАНИЯ,
// НЕЗНАЧАЩИЕ СИМВОЛЫ, ЗАПИСЫВАЕТ ОТДЕЛЬНЫЕ СЛОВА
// В МАССИВ И ЗАПИСЫВАЕТ СТРОКУ С КОНЦА И СРАВНИВАЕТ С ИСХОДНОЙ

////Строка = "кобан упал и лапу набок";     шалаш
//Строка = "";
//ВвестиСтроку(Строка);

//// блок приведения текста к единому формату 
//Стр1 = СтрЗаменить(Строка,","," ");
//Стр2 = СтрЗаменить(Стр1,"-"," ");
//Стр3 = СтрЗаменить(Стр2,"?"," ");
//Стр4 = СтрЗаменить(Стр3,"!"," ");
//Стр5 = СтрЗаменить(Стр4,":"," ");
//Стр6 = СтрЗаменить(Стр5,";"," ");
//Стр7 = СтрЗаменить(Стр6,"."," ");
//Строка = Стр7;                     // перезаписываем для удобства


//Массив =  СтрРазделить(Строка," ", Ложь);     // исключаем больше одного пробелов между словами 
//Граница = Массив.ВГраница() ;
//ОтформатированнаяСтрока = ""; 

//Для Шаг = 0 По Массив.ВГраница()  Цикл
//  ОтформатированнаяСтрока = ОтформатированнаяСтрока + " " + Массив[Шаг]; 
//КонецЦикла;  

//Строка = ОтформатированнаяСтрока;    
//ОтсчечениеПробелов = СокрЛП(Строка) ;
//Строка =  ОтсчечениеПробелов;    // перезаписываем для удобства
////Конец блока приведения текста к единому формату     
// 
// СложениеСлов = ""; 
// Для Шаг = 0  По Массив.ВГраница() Цикл 
//     
//    ДлинаСлова = СтрДлина(Массив[Граница - Шаг]); // считаем длину слов находящихся с конца строки
//    СложениеБукв = "";  
//    
//    Для Индекс = 0 По ДлинаСлова - 1 Цикл    // разбираем каждое слова на отдельные буквы с конца
//       Буква = Сред(Массив[Граница - Шаг],ДлинаСлова - Индекс, 1 );
//    СложениеБукв = СложениеБукв + Буква ; 	
//    
//КонецЦикла;

//СложениеСлов = СложениеСлов + " " +  СложениеБукв; 
//    
//КонецЦикла;

//ОтсчечениеПробелов = СокрЛП(СложениеСлов);
//СложениеСлов = ОтсчечениеПробелов; 


//Если Строка = СложениеСлов  Тогда
//    Сообщить("Вы ввели палиндром! ");
//Иначе 
//    Сообщить("Введенная Вами строка не является палиндромом ");
//КонецЕсли;

// ЗАДАЧА № 7Б ПРОВЕРЯЕТ СТРОКУ НА ПАЛИНДРОМ

// ПРИНЦИП РАБОТЫ - СРАВНИВАЕТ ПЕРВЫЙ И ПОСЛЕДНИЙ СИМВОЛ И ИДЕТ В СЕРЕДИНУ СЛОВА

  ////Строка = "кобан упал и лапу набок";     шалаш
  //Строка = "";
  //ВвестиСтроку(Строка); 
  //СтрокаПалиндром = Истина;
  //Граница = СтрДлина(Строка) + 1; 
  //
  //Для Шаг = 1 По СтрДлина(Строка)    Цикл
  //    НачалоСтроки = Сред(Строка,Шаг,1);
  //    КонецСтроки = Сред(Строка,Граница - Шаг,1);
  //    Если НачалоСтроки = КонецСтроки  Тогда
  //        
  //    Иначе 
  //        СтрокаПалиндром = Ложь;
  //        Сообщить("Введенное Вами слово не палиндром");
  //        Прервать
  //        
  //    КонецЕсли;
  //       
  //КонецЦикла;

  //    Если СтрокаПалиндром = Истина Тогда
  //        Сообщить("Введенное Вами слово палиндром");
  //    КонецЕсли;
  
  
  
  
  // ЗАДАЧА №8 ПОДСЧЕТ СЛОВ, ПРОБЕЛОВ И ЗНАКОВ ПРЕПИНАНИЯ  
  
  //ПРИНЦИП РАБОТЫ - СЛОВА СЧИТАЮТСЯ КОГДА КОД ПОСЛЕДУЮЩЕГО СИМВОЛА МЕНЬШЕ 1000, А ТЕКУЩЕГО БОЛЬШЕ 1000
  // ВСЕ БУКВЫ РУС ЯЗ ИМЕЮТ КОД СИМВОЛА БОЛЬШЕ 1000, А ОСТАЛЬНЫЕ ЗНАКИ МЕНЬШЕ 1000, КРОМЕ СИМВОЛА "№" - 4870
  
 //Строка = "";
 //ВвестиСтроку(Строка);
 //СчетчикЗнаковПрепинания = 0;
 //СчетчикСлов = 0;
 //СчетчикПробелов = 0;

 //Для Шаг = 1 По СтрДлина(Строка)  Цикл
 //    КОД = КодСимвола(Строка, Шаг);
 //    КодСледующегоСимвола = КодСимвола(Строка, Шаг + 1);
 //    
 //    Если КОД > 1000 И КодСледующегоСимвола < 1000 Тогда
 //        СчетчикСлов = СчетчикСлов + 1;
 //    ИначеЕсли КОД = 32 Тогда 
 //        СчетчикПробелов = СчетчикПробелов + 1;
 //    ИначеЕсли  КОД <> 32  И КОД < 1000 Тогда
 //       СчетчикЗнаковПрепинания = СчетчикЗнаковПрепинания + 1; 
 //    КонецЕсли;
 //  
 //КонецЦикла;  
 //
 //Сообщить("Всего слов - " + СчетчикСлов +  ", пробелов - " + СчетчикПробелов + ", Знаков препинания - " + СчетчикЗнаковПрепинания );
 
 //Строка = "~`!@""#№$;%^:?&*()-_+={}[]''/<>,.-\/|"; // Все знаки препинания - код равен от 40 до 130, кроме № - 8470
 //Строка = "йцукенгшщзхъфывапролджэячсмитьбю ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ" // Код символа больше от 1000 до 1100, 
 //Строка = "qwertyuiopasdfghjklzxcvbnm QWERTYUIOPASDFGHJKLZXCVBNM";      // Код символа больше от 40 до 110,

 //Для Шаг = 1  По СтрДлина(Строка)  Цикл 
 //    Сообщить(КодСимвола(Строка, Шаг));
 //
 //  	
 //  
 //  КонецЦикла;
//Сообщить(Символ(8470));
 //Сообщить(КодСимвола("—"));

  // ЗАДАЧА №8 ПОДСЧЕТ СЛОВ, ПРОБЕЛОВ И ЗНАКОВ ПРЕПИНАНИЯ 
  
  // ПРИНЦИП РАБОТЫ - ПОДСЧЕТ СЛОВ ОСУЩЕСТВЛЯЕТСЯ ТАК ЖЕ КАК И В ЗАДАЧЕ ВЫШЕ
  // ОДНАКО ЗНАКИ ПРЕПИНАНИЯ СРАВНИВАЮТСЯ СО СТРОКОЙ В КОТОРОЙ ЗАПИСАНЫ ВСЕ ЗНАКИ ПРЕПИНАНИЯ
  // РЕШЕНИЕ БОЛЕЕ УНИВЕРСАЛЬНО ТК УЧИТЫВАЮТСЯ ВСЕ ЗНАКИ ПРЕПИНАНИЯ И ПРЕДУСМОТРЕННА ВОЗМОЖНОСТЬ
  // РАБОТЫ С ИН ТЕКСТОМ, ЧТО ВЫШЕ БЫЛО СДЕЛАТЬ НЕЛЬЗЯ
 
 //Текст = "";    // Доброе утро, страна!
 //ВвестиСтроку(Текст);
 //СчетчикЗнаковПрепинания = 0;
 //СчетчикСлов = 0;
 //СчетчикПробелов = 0;
 //Длина = СтрДлина(Текст);
 //ЗнакиПрепинания = "~`!@""#№$;%^:?&*()-_+={}[]''/<>,.-\/|"; // Все знаки препинания - код равен от 40 до 130, кроме № - 8470
 //МыВСлове = Истина;
 //Для Шаг = 1 По СтрДлина(Текст) Цикл 
 //    Символ = Сред(Текст, Шаг, 1);
 //    СледСимвол = Сред(Текст, Шаг + 1, 1); 
 //    Если (Символ <> " " Или  СтрНайти(ЗнакиПрепинания,Символ) = 0)  И (СледСимвол = " " Или СтрНайти(ЗнакиПрепинания,СледСимвол) > 0)  Тогда
 //        СчетчикСлов = СчетчикСлов + 1; 
 //    КонецЕсли; 
 //    
 //    Если Символ = " " Тогда                  
 //       СчетчикПробелов = СчетчикПробелов + 1;        
 //   ИначеЕсли СтрНайти(ЗнакиПрепинания,Символ) > 0 Тогда 
 //        СчетчикЗнаковПрепинания = СчетчикЗнаковПрепинания + 1;
 //    КонецЕсли ;
 //    
 //КонецЦикла;
 //  Сообщить("Всего слов - " + СчетчикСлов +  ", пробелов - " + СчетчикПробелов + ", Знаков препинания - " + СчетчикЗнаковПрепинания );
 
 
  // ЗАДАЧА №8 ПОДСЧЕТ СЛОВ, ПРОБЕЛОВ И ЗНАКОВ ПРЕПИНАНИЯ   
  
  //ПРИНЦИП РАБОТЫ - описан в коде 

 //Текст = "";    // Доброе утро, страна!
 //ВвестиСтроку(Текст);
 //СчетчикЗнаковПрепинания = 0;
 //СчетчикСлов = 0;
 //СчетчикПробелов = 0;
 // ЗнакиПрепинания = "~`!@""#№$;%^:?&*()-_+={}[]''/<>,.-\/|";  // знаки препиная сравниваются с этой строкой
 // МыВСлове = Ложь;
 // Для Шаг = 1 По СтрДлина(Текст) Цикл
 //     Символ = Сред(Текст,Шаг,1);
 //     Если Символ = " " Или СтрНайти(ЗнакиПрепинания,Символ) > 0 Тогда
 //         
 //         Если МыВСлове = Истина Тогда        // данное условие выполняется, когда осуществляется переход с 
 //             СчетчикСлов = СчетчикСлов + 1;  // буквы на другой символ
 //         КонецЕсли;
 //         
 //         МыВСлове = Ложь;                   // затем снова перезаписывается в ложь, чтобы сработать тогда когда начнуться буквы
 //         Если Символ = " " Тогда
 //             СчетчикПробелов = СчетчикПробелов + 1;
 //         Иначе 
 //             СчетчикЗнаковПрепинания = СчетчикЗнаковПрепинания + 1;
 //         КонецЕсли; 
 //         
 //     Иначе 
 //         МыВСлове = Истина;    // Пока флаг = истина мы находимся в слове
 //     КонецЕсли;                // когда осуществится переход с буквы на другой символ
 //                               // выполнится условие в начале цикла
 // КонецЦикла; 
 // 
 //Если МыВСлове = Истина Тогда    // добавление последнего слова
 //    СчетчикСлов = СчетчикСлов + 1;
 //КонецЕсли; 
 //
 // Сообщить("Всего слов - " + СчетчикСлов +  ", пробелов - " + СчетчикПробелов + ", Знаков препинания - " + СчетчикЗнаковПрепинания );
 
 
 
 // ЗАДАЧА № 9 СЧИТЫВАНИЕ ТЕКСТА И ВЫВОД СЛОВ ПОСЛЕДОВАТЕЛЬНО ПО ИХ ДЛИНЕ
 
 // ПРИНЦИП РАБОТЫ - СНАЧАЛА УБИРАЕМ ЗНАКИ ПРЕПИНАНИЯ, ЗАТЕМ РАЗДЕЛЯЕМ НА ОТДЕЛЬНЫЕ СЛОВА
 // ПОТОМ СРАВНИВАЕМ ДЛИНУ СОСЕДНИХ ЭЛЕМЕНТОВ МАССИВА(СЛОВ) И СОРТИРУЕМ МЕТОДОМ ПУЗЫРЬКА
 
 // Мой дядя самых честных правил, когда не в шутку занемог
 //Текст = "";   
 //ВвестиСтроку(Текст);
 //ЗнакиПрепинания = "~`!@""#№$;%^:?&*()-_+={}[]''/<>,.-\/|";  
 //
 //Для Шаг = 1 По СтрДлина(Текст)  Цикл 
 //    Символ = Сред(Текст, Шаг, 1);
 //    
 //    Если СтрНайти(ЗнакиПрепинания,Символ)> 0 Тогда  // Фильтруем знаки препинания     
 //        Текст = СтрЗаменить(Текст,Символ," ");
 //    КонецЕсли; 
 //    
 //КонецЦикла; 
 //
 //Массив =  СтрРазделить(Текст," ", Ложь);  // записали каждое отдельное слово в ячейку массива 
 //Граница = Массив.ВГраница() ;
 //ДлинаСлова1 = 0;  
 //ДлинаСлова2 = 0;
 //
 //Буфер = 0;
 //БылаПерестановка = Истина;  
 //
 //Пока БылаПерестановка = Истина Цикл       // Сортировка методом пузырька
 //    БылаПерестановка = Ложь ;
 //    
 //    Для Шаг = 0 По Массив.ВГраница() - 1 Цикл
 //        ДлинаСлова1 = СтрДлина(Массив[Шаг]);
 //        ДлинаСлова2 = СтрДлина(Массив[Шаг + 1]);
 //        
 //        Если ДлинаСлова1 > ДлинаСлова2 Тогда
 //            Буфер = Массив[Шаг + 1]; 
 //            Массив[Шаг + 1] = Массив[Шаг];	
 //            Массив[Шаг] = Буфер; 
 //            БылаПерестановка = Истина;
 //            
 //        КонецЕсли;
 //        
 //    КонецЦикла; 
 //    
 //КонецЦикла;  
 //
 //Для каждого элемент  Из Массив  Цикл
 //    Сообщить(элемент);
 //КонецЦикла;
 
 //Строка = "0123456789";      // Код ЦИФР  с 48 по 57
 //                            // Код с 1 по 32, с 127 по 160 пустой,
 //                            //с 160 по 944 не используемые, специфические символы 
 //                            // с 945 по 969 греческие буквы
 //                            // с 1040 по 1105 кириллица
 //                            // за 1100 и более снова непонятные символы
 //Для Шаг = 943  По 1200  Цикл 
 //    Сообщить("Номеру символа " + Шаг +" соответствует " +  Символ(Шаг));
 //      КонецЦикла;    
 
 // ЗАДАЧА №10,11 КОДИРОВКА И РАСШИФРОВКА ТЕКСТОВОГО ФАЙЛА
 
 // ПРИНЦИП РАБОТЫ - ПОЛЬЗОВАТЕЛЬ УКАЗЫВАЕТ НАЗВАНИЕ РАНЕЕ СОЗДАННОГО ТЕКСТОВОГО ФАЙЛА С НУЖНЫМ ТЕКСТОМ
 // И ВВОДИТ КЛЮЧ
 // ДРУГОЙ ПОЛЬЗОВАТЕЛЬ ДОЛЖЕН ВВЕСТИ ТОТ ЖЕ КЛЮЧ, ЧТО И ПЕРВЫЙ, ТОЛЬКО ТОГДА ОН СМОЖЕТ ПРОЧИТАТЬ ИСХОДНЫЙ ТЕКСТ
 // ЗАКОДИРОВАННЫЙ ТЕКСТ СОХРАНЯЕТСЯ НА РАБ СТОЛЕ OUT.TXT, А РАСШИФРОВАННЫЙ RES.TXT
 
 //КлючКодировки = 0;
 //ИмяФайла = "";
 //ВвестиСтроку(ИмяФайла, "Укажите название файла");
 //ВВестиЧисло(КлючКодировки, "Укажите ключ");
 //ПутьКФайлу = "C:\Users\днс\Desktop\" + ИмяФайла + ".txt";
 //
 ////Вызов функции кодировки, возвращяет путь к файлу
 //ПутьКШифру = Отработки.Кодировка(ПутьКФайлу, КлючКодировки);  
 //КлючРасшифровки = 0;
 //ВВестиЧисло(КлючРасшифровки, "Введите Ключ");
 //
 ////Вызов функции декодировки, возвращяет путь к файлу
 //ПутьКДешифру = Отработки.Расшифровка(ПутьКШифру,КлючРасшифровки);
 

 // ЗАДАЧА №12 ВВОД ОТ ПОЛЬЗОВАТЕЛЯ ДЛИНЫ И КОЛ-ВА ПАРОЛЕЙ И 
 //СЛУЧАЙНА АВТОГЕНЕРАЦИЯ ПАРОЛЕЙ ИЗ РАЗРЕШЕННЫХ СИМВОЛОВ
 
 //ДлинаПароля = 0; 
 //КоличествоПаролей = 0;
 //
 //ВвестиЧисло(КоличествоПаролей, "Сколько будет паролей"); 
 //ВвестиЧисло(ДлинаПароля, "Какая будет длина у пароля"); 
 //
 //Отработки.ГенерацияПаролей(КоличествоПаролей,ДлинаПароля); 
 
 // ЗАДАЧА № 13А - ТРЕНИРОВКА ИСПОЛЬЗОВАНИЯ СТРУКТУР, МАССИВОВ И СПИСКОВ ЗНАЧЕНИЙ
  //                           ПЕРВЫЙ СПОСОБ СОЗДАТЬ СТРУКТУРУ  
  
  
 //ЛюбимыеСущности =  Новый Структура;
 //Цвет = "";
 //Фильм = "";
 //ВремяГода = "";
 //ВвестиСтроку(Цвет);
 //ВвестиСтроку(Фильм);
 //ВвестиСтроку(ВремяГода);
 //ЛюбимыеСущности.Вставить("Цвет", Цвет);
 //ЛюбимыеСущности.Вставить("Фильм", Фильм);
 //ЛюбимыеСущности.Вставить("ВремяГода", ВремяГода); 
 
 
   //                           ВТОРОЙ СПОСОБ СОЗДАТЬ СТРУКТУРУ 
   
    //ЛюбимыеСущности =  Новый Структура("Цвет,Фильм,ВремяГода");
   //Цвет = "";
   //Фильм = "";
   //ВремяГода = "";
   //ВвестиСтроку(ЛюбимыеСущности.Цвет);
   //ВвестиСтроку(ЛюбимыеСущностим.Фильм);
   //ВвестиСтроку(ЛюбимыеСущности.ВремяГода);
   //
   //ЛюбимыеСущности =  Новый Структура("Цвет,Фильм,ВремяГода");
   
   //Сообщить("Ваш любимый цвет - " + ЛюбимыеСущности.Цвет + Символы.ПС
   //+ "Ваш любимый Фильм - " + ЛюбимыеСущности.Фильм + Символы.ПС
   //+ "Ваше любимое время года - " + ЛюбимыеСущности.ВремяГода );
   
   //                                     МАССИВ   
   
   //ЛюбимыеСущности = Новый Массив(2);
   
   //ВвестиСтроку(ЛюбимыеСущности[0]);
   //ВвестиСтроку(ЛюбимыеСущности[1]);
   //ВвестиСтроку(ЛюбимыеСущности[2]); 
   
     //Сообщить("Ваш любимый цвет - " + ЛюбимыеСущности[0] + Символы.ПС
   //+ "Ваш любимый Фильм - " + ЛюбимыеСущности[1] + Символы.ПС
   //+ "Ваше любимое время года - " + ЛюбимыеСущности[2] );
   
   
   //                                    СПИСОК ЗНАЧЕНИЙ 
   
   
   //ЛюбимыеСущности = Новый СписокЗначений; 
   //
   //ЛюбимыеСущности.Добавить("");
   //ЛюбимыеСущности.Добавить("");
   //ЛюбимыеСущности.Добавить("");
   //ВвестиСтроку(ЛюбимыеСущности[0].Значение, "Какой Ваш любимый цвет");
   //ВвестиСтроку(ЛюбимыеСущности[1].Значение, "Какой Ваш любимы Фильм");
   //ВвестиСтроку(ЛюбимыеСущности[2].Значение, "Какое Ваше любимое время года");
   //
   //   Сообщить("Ваш любимый цвет - " + ЛюбимыеСущности[0].Значение + Символы.ПС
   //+ "Ваш любимый фильм - " + ЛюбимыеСущности[1].Значение + Символы.ПС
   //+ "Ваше любимое время года - " + ЛюбимыеСущности[2].Значение );     
   
   
   
   
  //Функция Кодировка (ПутьКФайлу,КлючКодировки ) Экспорт
  //    
  //    ГСЧ = Новый ГенераторСлучайныхЧисел(КлючКодировки);
  //    СлучайноеЧисло = ГСЧ.СлучайноеЧисло();
  //    
  //    Документ = Новый ТекстовыйДокумент; 
  //    Документ.Прочитать(ПутьКФайлу);
  //    Текст = Документ.ПолучитьТекст(); 
  //    ШифрованныйТекст = "";
  //    
  //    Для Шаг = 1 По СтрДлина(Текст)  Цикл
  //        Код = КодСимвола(Текст,Шаг) + СлучайноеЧисло;
  //        ШифрованныйСимвол = Символ(Код);	
  //        ШифрованныйТекст = ШифрованныйТекст + ШифрованныйСимвол; 
  //    КонецЦикла;
  //    
  //    Документ.УстановитьТекст(ШифрованныйТекст); 
  //    ПутьКШифру = "C:\Users\днс\Desktop\Out.txt";
  //    Документ.Записать(ПутьКШифру);
  //    Возврат ПутьКШифру
  //КонецФункции 

  //Функция Расшифровка(ПутьКШифру,КлючРасшифровки) Экспорт 
  //    ГСЧ = Новый ГенераторСлучайныхЧисел(КлючРасшифровки);
  //    СлучайноеЧисло = ГСЧ.СлучайноеЧисло();
  
  //    Документ = Новый ТекстовыйДокумент; 
  //    
  //    Документ.Прочитать(ПутьКШифру);
  //    Текст = Документ.ПолучитьТекст(); 
  //    ДешифрованныйТекст = ""; 
  //    
  //    Для Шаг = 1 По СтрДлина(Текст) Цикл
  //        Код = КодСимвола(Текст,Шаг) - СлучайноеЧисло;
  //        ДешифрованныйСимвол = Символ(Код);	
  //        ДешифрованныйТекст = ДешифрованныйТекст + ДешифрованныйСимвол; 
  //    КонецЦикла; 
  //    
  //    Документ.УстановитьТекст(ДешифрованныйТекст); 
  //    ПутьКДешифру = "C:\Users\днс\Desktop\Res.txt";
  //    Документ.Записать("C:\Users\днс\Desktop\Res.txt");	
  //    Возврат ПутьКДешифру
  //КонецФункции // ()
     
         
  //Процедура ГенерацияПаролей (КоличествоПаролей, ДлинаПароля) Экспорт    
  //    
  //    Документ = Новый ТекстовыйДокумент;
  //    ГСЧ = Новый ГенераторСлучайныхЧисел(); 
  //    РазрешенныеСимволы = "1234567890_qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM";
  //    ВсеПароли = "";
  //    Для Шаг = 1 По КоличествоПаролей Цикл
  //        Пароль = "";
  //        Для Индекс = 1  По ДлинаПароля Цикл
  //            СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1,СтрДлина(РазрешенныеСимволы));
  //            Символ = Сред(РазрешенныеСимволы,СлучайноеЧисло, 1);	
  //            Пароль = Пароль + Символ ;
  //        КонецЦикла;
  //        ВсеПароли = "" + ВсеПароли + Пароль + Символы.ПС ;
  //        
  //        
  //        //ОткрытьЗначение(Шаг +  " Пароль " + " " + Пароль + Символы.ПС); 
  //        
  //    КонецЦикла;
  //    //Сообщить(ВсеПароли);
  //    Документ.УстановитьТекст(ВсеПароли);
  //    Документ.Записать("C:\Users\днс\Desktop\Пароли.txt"); 
  // 
  //КонецПроцедуры    
  
   // ЗАДАЧА №19 СОЗДАНИЕ МАССИВА И ЕГО ОБРАБОТКА И ВЫВОД ПОЛЬЗОВАТЕЛЮ ЧЕРЕЗ ПРОЦЕДУРЫ
   //   
   // Процедура ВывестиПользователю(МиссивЧисел) Экспорт
   //     
   //     Для каждого Элемент  Из МиссивЧисел Цикл
   //        Сообщить(Элемент);
   //     	
   //     
   //     КонецЦикла;
   // 	
   // 
   // КонецПроцедуры
   //   
   // Процедура ПеремешатьМассив(МиссивЧисел) Экспорт
   //     Буфер = 0;
   //     ГСЧ = Новый ГенераторСлучайныхЧисел; 
   //     Для Шаг = 0 По МиссивЧисел.Количество() - 1 Цикл
   //         СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0,9);
   //         Буфер = МиссивЧисел[СлучайноеЧисло]; 
   //         МиссивЧисел[СлучайноеЧисло] = МиссивЧисел[Шаг]; 
   //         МиссивЧисел[Шаг] = Буфер; 
   //         
   //     КонецЦикла;
   // КонецПроцедуры    
   //   
   //Процедура СортировкаМассива(МиссивЧисел) Экспорт
   //    Буфер = 0; 
   //    БылиПерестановки = Истина;
   //    Пока БылиПерестановки = Истина Цикл 
   //             БылиПерестановки = Ложь;
   //        Для Шаг = 0 По МиссивЧисел.Количество() - 2 Цикл 
   //           
   //            
   //            Если МиссивЧисел[Шаг] > МиссивЧисел[Шаг + 1]   Тогда
   //                Буфер = МиссивЧисел[Шаг + 1];
   //                МиссивЧисел[Шаг + 1] = МиссивЧисел[Шаг]; 	
   //                МиссивЧисел[Шаг] = Буфер;
   //                БылиПерестановки = Истина;
   //                
   //            КонецЕсли; 
   //            
   //        КонецЦикла
   //        
   //    КонецЦикла;
   // КонецПроцедуры     
   
   
   
    // ЗАДАЧА №20 ПЕРЕДАТЬ МАССИВ В ФУНКЦИЮ И УМНОЖИТЬ КАЖДЫЙ ЕГО ЭЛЕМЕТ НА ПОРЯДКОВЫЙ НОМЕР

   
   //Массив = Новый Массив(10) ;
   //ГСЧ = Новый ГенераторСлучайныхЧисел;  
   //
   //Для Шаг = 0 По Массив.Количество() - 1 Цикл
   //    СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1,1000);
   //    Массив[Шаг] = СлучайноеЧисло;	
   //КонецЦикла; 
   //
   //Для каждого Элемент Из Массив Цикл
   //    Сообщить(Элемент);
   //КонецЦикла;

   // Сообщить("Новый Массив");
   // ВывестиМассив = Отработки.ПреобразованиеМассива(Массив);
   // 
   // Для каждого Элемент Из ВывестиМассив Цикл
   //   Сообщить(Элемент);
   // 	
   // 
   // КонецЦикла;

   
   // ЗАДАЧА №20 ПЕРЕДАТЬ МАССИВ В ФУНКЦИЮ И УМНОЖИТЬ КАЖДЫЙ ЕГО ЭЛЕМЕТ НА ПОРЯДКОВЫЙ НОМЕР

      
   //Функция ПреобразованиеМассива (Массив) Экспорт
   //    
   //     НовыйМассив = Новый Массив(Массив.Количество() );
   //     
   //     Для Шаг = 0 По Массив.Количество() - 1  Цикл

   //         НовыйМассив[Шаг] = Массив[Шаг] * (Шаг + 1);
   //     	
   //     
   //     КонецЦикла;
   // 	
   //    Возврат НовыйМассив
   // КонецФункции // ()

   
   
   // ЗАДАЧА №21 ИТОГОВАЯ
  
  
  //СписокСобытий = Новый СписокЗначений();
  //СписокКоманд = Новый СписокЗначений();
  //
  //СписокСобытий.Добавить(1961, "Первый полет в космос");
  //СписокСобытий.Добавить(988, "Крещение Руси");
  //
  //СписокКоманд.Добавить(1, "Ввести новое событие");
  //СписокКоманд.Добавить(2, "Очистить список команд");
  //СписокКоманд.Добавить(3, "Сортировать событие по году");
  //СписокКоманд.Добавить(4, "Вывести все события на определенную дату"); 
  //СписокКоманд.Добавить(5, "Отмена"); 
  //Строка = "";
  //ПрограммаРаботает = Истина;   
  //НайтиГод = 0;
  //
  //
  //Пока ПрограммаРаботает = Истина Цикл
  //    //Вывод списка событий При начальном окне
  //    Строка = "";
  //    
  //    Для каждого Элемент Из СписокСобытий Цикл
  //        Строка = Строка + "" + Элемент.Представление + " - " + Элемент.Значение + символы.ПС;
  //    КонецЦикла;
  //    // Основное Диалоговое окно
  //    Команда =  Вопрос(Строка,СписокКоманд,0,, "Главное меню");
  //    
  //    Если Команда = 1 Тогда
  //        Отработки.ВвестиНовоеСобытие(СписокСобытий); 
  //    ИначеЕсли Команда = 2 Тогда
  //        Отработки.ОчиститьСписокСобытий(СписокСобытий);
  //    ИначеЕсли Команда = 3 Тогда
  //        Отработки.СортироватьСобытияПоГоду(СписокСобытий);
  //    ИначеЕсли Команда = 4 Тогда
  //        Отработки.СобытияНаОпределеннуюДату(СписокСобытий)
  //    ИначеЕсли Команда = 5 Тогда
  //        ПрограммаРаботает = Ложь;
  //        Прервать
  //    КонецЕсли;
  //    
  //    
  //         
  //КонецЦикла;

   
   // ЗАДАЧА №21  
   //
   //Процедура ВвестиНовоеСобытие(СписокСобытий) Экспорт 
   //    НазваниеСобытия = "";
   //    ВвестиСтроку(НазваниеСобытия,"Введите название события");
   //    ДатаСобытия = 0;
   //    ВвестиЧисло(ДатаСобытия, "Введите когда это событие произошло");
   //    СписокСобытий.Добавить(ДатаСобытия,НазваниеСобытия);
   //    
   //    КонецПроцедуры
   //
   //
   //    Процедура ОчиститьСписокСобытий(СписокСобытий) Экспорт 
   //        Ответ =  Вопрос("Вы уверены?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да); 
   //       Если Ответ = КодВозвратаДиалога.Да  Тогда
   //           СписокСобытий.Очистить();
   //       
   //           
   //       КонецЕсли;

   //      	
   //  
   //  КонецПроцедуры
   //   
   //  Процедура СортироватьСобытияПоГоду(СписокСобытий) Экспорт
   //   СписокСобытий.СортироватьПоЗначению();
   //  	
   //  
   //  КонецПроцедуры
   //
   //  Процедура СобытияНаОпределеннуюДату(СписокСобытий) Экспорт 
   //       НайтиГод = 0;
   //       ВвестиЧисло(НайтиГод, "Введите год");
   //      Если СписокСобытий.НайтиПоЗначению(НайтиГод)= Неопределено Тогда    	
   //          Предупреждение("На данный год событий не найдено",0,"Предупреждение");
   //      Иначе 
   //       
   //       ОткрытьЗначение("По вашему запросу на " + НайтиГод + " г. найдено событие - "  +
   //       СписокСобытий.НайтиПоЗначению(НайтиГод).Представление);

   //       КонецЕсли;
   //      КонецПроцедуры

    
    
    КонецПроцедуры
    
    
    Процедура ЭкспортируемыеПроцедурыИФункцииКБлоку1и2 () 
        
        
        //Процедура Произведение (ПервоеЧисло, ВтороеЧисло)  Экспорт
//    Результат = ПервоеЧисло * ВтороеЧисло;
//    Сообщить(Результат);
//   
//	             
//КонецПроцедуры
 
//Функция ОписанияЗнакаЧисла (ЛюбоеЧисло) Экспорт 
//    Если ЛюбоеЧисло <= 0  Тогда
//        Возврат "Отрицательное число"
//    Иначе 
//        Возврат "Положительное число"
//КонецЕсли;       
// КонецФункции 
// 
// Функция ДлинаОкружности(Радиус)Экспорт;
//     Результат = 2 * 3.14 *Радиус;
//      Возврат 2 * 3.14 * Радиус;
// 	
// 
// КонецФункции // ДлинаОкружности()
// 
// Функция  ОпределениеМеньшегоЧисла(Число1, Число2) Экспорт
//    Если Число1 < Число2 Тогда
//         Возврат  Число1       
//    Иначе    
// Возврат Число2
//    КонецЕсли; 
// 	    КонецФункции // ОпределениеМеньшегоЧисла()



         ////            Рассчет площади окружности через функцию (Описание)
         
         
        //Функция ПлощадьКруга(Радиус) Экспорт
        //  Пи = 3.14;
        //  Результат = Пи * (Радиус *Радиус); 
        //	     Возврат Результат
        //
        //КонецФункции // ПлощадьКруга()
        
        
        
        ////             Рассчет площади окружности через процедуру (Описание)
        //
        //Процедура ПлощадьКруга(Радиус) Экспорт
        //           Пи = 3.14;
        //           Результат = Пи * (Радиус * Радиус);
        //	       ОткрытьЗначение(Результат);
        //
        //КонецПроцедуры
        
        //      //Сложение Строк (Описание)
        //Функция СложениеСтрок (Строка1, Строка2) Экспорт
        //    Возврат Строка1 + " " + Строка2;
        //           КонецФункции // ()
          
        
        
//        Процедура ВыводЧисел(Число1, Число2) Экспорт
//            Если Число1 >= Число2 Тогда
//                 БольшееЧисло = Число1;
//                 МеньшееЧисло = Число2
//             Иначе  
//                 БольшееЧисло = Число2;
//                 МеньшееЧисло = Число1 ;
//             КонецЕсли; 
//             
//             Строка = "";

//             Пока МеньшееЧисло <= БольшееЧисло Цикл
//                Строка = Строка +  МеньшееЧисло + " ";
//                МеньшееЧисло = МеньшееЧисло + 1;  
//            КонецЦикла; 
//            ОткрытьЗначение(Строка) ;

//КонецПроцедуры // ()
         
     
//Процедура ВыводЧисел(Число1, Число2) Экспорт
//    Строка = "";
//      Если  Число1 >= Число2 Тогда
//                 БольшееЧисло = Число1;
//                 МеньшееЧисло = Число2;
//                 Пока МеньшееЧисло <= БольшееЧисло Цикл
//                Строка = Строка +  БольшееЧисло + " ";
//                БольшееЧисло = БольшееЧисло - 1;  
//                КонецЦикла; 

//     Иначе  
//                 БольшееЧисло = Число2;
//                 МеньшееЧисло = Число1 ;
//                 Пока МеньшееЧисло <= БольшееЧисло Цикл
//                Строка = Строка +  МеньшееЧисло + " ";
//                МеньшееЧисло = МеньшееЧисло + 1;  
//                  КонецЦикла; 

//    КонецЕсли;                   
//                        ОткрытьЗначение(Строка) ;
//КонецПроцедуры // ()

   ////               Функция принимает дату и выводит день недели  
   
//Функция ВывестиДеньНедели(ДатаОтПользователя) Экспорт  
//    НомерДня = ДеньНедели(ДатаОтПользователя);
//    Если НомерДня = 1  Тогда
//        Строка = "Понедельник";
//                  ИначеЕсли НомерДня = 2  Тогда
//        Строка = "Вторник";
//                    ИначеЕсли НомерДня = 3  Тогда
//        Строка = "Среда";
//                    ИначеЕсли НомерДня = 4  Тогда
//        Строка = "Четверг";
//                         ИначеЕсли НомерДня = 5  Тогда
//        Строка = "Пятница";
//                     ИначеЕсли НомерДня = 6  Тогда
//        Строка = "Суббота";
//                     ИначеЕсли НомерДня = 7  Тогда
//        Строка = "Воскресенье";
//    Иначе     
//        Строка = "Невозможное возможно";

//       КонецЕсли; 
//       Возврат Строка
//         КонецФункции



////      Функция принимает День рождения и выводит либо что день рождения уже прошел,
////                    либо кол-во секунд до дня рождения    

//Функция ДеньРождения(ДатаОтПользователя, Дата) Экспорт
//       ДР = ДеньГода(ДатаОтПользователя);
//       ДеньТекущий = ДеньГода(Дата);
//       
//       Если  ДР < ДеньТекущий  Тогда
//           Возврат "Ваш день рождения уже прошел!"
//           
//       ИначеЕсли ДР = ДеньТекущий Тогда 
//              Возврат "С днем рождения!"
//              
//          Иначе 
//          СекундДоДР = (ДР - ДеньТекущий)*60*60*24;   
//          
//             Возврат "Вам до дня рождения осталось " + СекундДоДР + " секунд" 

//      КонецЕсли; 
//КонецФункции // ДеньРождения()
 
   //  Функция ПолучитьСледущийДеньРождения (ДеньРождения) Экспорт
   // 
   //
   //  ДатаСравнения = Дата(
   //  Год(ДеньРождения),
   //  Месяц(ТекущаяДата()),
   //  День(ТекущаяДата()));  
   //  
   // Если ДатаСравнения <= ДеньРождения Тогда
   //       ДеньРожденияВЭтомГоду = Дата(
   //  Год(ТекущаяДата()),
   //  Месяц(ДеньРождения),
   //  День(ДеньРождения)); 
   //  Возврат  ДеньРожденияВЭтомГоду;
   //  //Сообщить(ДеньРождения);
   //     
   // ИначеЕсли ДатаСравнения > КонецДня(ДеньРождения) Тогда
   //     
   //    ДеньРожденияВСледущемГоду = Дата(
   //  Год(ТекущаяДата())+1,
   //  Месяц(ДеньРождения),
   //  День(ДеньРождения));
   //  Возврат  ДеньРожденияВСледущемГоду;
   //  //Сообщить(ДеньРождения);
   //     КонецЕсли;
   //     
   // КонецФункции 

    
    
    
    
    
         
        
    КонецПроцедуры
    
    